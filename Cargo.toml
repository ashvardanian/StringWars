[package]
name = "stringwars"
version = "1.4.2"
edition = "2021"
authors = ["Ash Vardanian <1983160+ashvardanian@users.noreply.github.com>"]
description = "Comparing performance-oriented string-processing libraries for substring search, multi-pattern matching, hashing, edit-distances, sketching, and sorting across CPUs and GPUs in Rust ðŸ¦€"
license = "Apache-2.0"
repository = "https://github.com/ashvardanian/StringWars"
homepage = "https://ashvardanian.com/posts/stringwars-on-gpus"
readme = "README.md"
keywords = ["string", "benchmark", "simd", "gpu", "stringzilla"]
categories = ["text-processing", "development-tools::profiling"]

[dependencies]
criterion = "0.7.0"
stringtape = "2.4.0"
stringzilla = { version = "4.2.1", default-features = false }

# To use a local version of StringZilla, set the path:
# stringzilla = { path = "../StringZilla/", features = ["cpus"] }
# stringzilla = { path = "../StringZilla/", features = ["cuda"] }

# Feature-based dependencies for benchmarks
[features]
default = ["stringzilla/cpus"]
cuda = ["stringzilla/cuda"]
bench_find = [
    "memchr",       # Substring Search
    "bstr",         # Byteset Search
    "aho-corasick", # Byteset Search
]
bench_hash = [
    "ahash",        # aHash
    "xxhash-rust",  # xxHash
    "blake3",       # Blake3
    "crc32fast",    # CRC32
    "murmurhash32", # MurmurHash32
    "foldhash",     # FoldHash
    "gxhash",       # gxHash (x86_64 only)
    "cityhash",     # CityHash (x86_64 only)
    "sha2",         # for SHA256
    "ring",         # for SHA256
    "bit-set",      # for collision counting
]
bench_sequence = [
    "arrow",  # Sorting
    "rayon",  # Parallel Sorting
    "polars", # DataFrame library with sorting
]
bench_similarities = [
    "rapidfuzz",  # Levenshtein Distance (also `strsim`)
    "bio",        # Needleman-Wunsch Score
    "fork_union", # Parallelizing RapidFuzz calls
]
bench_memory = [
    "rand",         # Randomize Buffer
    "zeroize",      # Obfuscate Buffer
    "getrandom",    # Randomize Buffer via OS
    "rand_chacha",  # Randomize Buffer
    "rand_xoshiro", # Randomize Buffer
]
bench_fingerprints = [
    "probabilistic-collections", # MinHash
    "fork_union",                # CPU core counting for device scopes
]

# TODO: String properties:
# - `unicode-width`
# - `textwrap`
# - `unicode-segmentation`

[dependencies.memchr]
version = "2.7.6"
default-features = false
optional = true

[dependencies.bio]
version = "3.0.0"
default-features = false
features = ["runtime-dispatch-simd"]
optional = true

[dependencies.bstr]
version = "1.11.3"
default-features = false
optional = true

[dependencies.aho-corasick]
version = "1.1.3"
optional = true

[dependencies.regex]
version = "1.12.1"
optional = false

[dependencies.rapidfuzz]
version = "0.5.0"
optional = true

[dependencies.fork_union]
version = "2.3.0"
optional = true

[dependencies.simhash]
version = "0.2"
optional = true

[dependencies.rust-tfidf]
version = "1.0"
optional = true

[dependencies.blake3]
version = "1.6.1"
optional = true

[dependencies.sha2]
version = "0.10"
optional = true

[dependencies.ring]
version = "0.17"
optional = true

[dependencies.crc32fast]
version = "1.3.2"
optional = true

[dependencies.murmurhash32]
version = "0.3"
optional = true

[dependencies.foldhash]
version = "0.2"
optional = true

[dependencies.ahash]
version = "0.8"
optional = true

[dependencies.xxhash-rust]
version = "0.8"
optional = true
features = ["xxh3", "const_xxh3"]

[dependencies.twox-hash]
version = "2.1.2"
optional = true

[dependencies.arrow]
version = "56.2.0"
optional = true

[dependencies.rayon]
version = "1.10.0"
optional = true

[dependencies.polars]
version = "0.51"
optional = true
default-features = false
features = ["lazy", "strings", "parquet"]

[dependencies.zeroize]
version = "1.8.2"
optional = true

[dependencies.getrandom]
version = "0.3.3"
optional = true

[dependencies.rand]
version = "0.9.2"
optional = true

[dependencies.rand_chacha]
version = "0.9.0"
optional = true

[dependencies.rand_xoshiro]
version = "0.7.0"
optional = true

[dependencies.probabilistic-collections]
git = "https://github.com/ashvardanian/probabilistic-collections-rs"
branch = "master"
optional = true

[dependencies.bit-set]
version = "0.8"
optional = true

[target.'cfg(target_os = "linux")'.dependencies]
perf-event = "0.4"
libc = "0.2.177"

[target.'cfg(target_arch = "x86_64")'.dependencies]
gxhash = { version = "3.4.1", optional = true }
cityhash = { version = "0.1", optional = true }

[[bench]]
name = "bench_find"
path = "bench_find.rs"
harness = false
required-features = ["bench_find"]

[[bench]]
name = "bench_similarities"
path = "bench_similarities.rs"
harness = false
required-features = ["bench_similarities"]

[[bench]]
name = "bench_hash"
path = "bench_hash.rs"
harness = false
required-features = ["bench_hash"]

[[bench]]
name = "bench_sequence"
path = "bench_sequence.rs"
harness = false
required-features = ["bench_sequence"]

[[bench]]
name = "bench_memory"
path = "bench_memory.rs"
harness = false
required-features = ["bench_memory"]

[[bench]]
name = "bench_fingerprints"
path = "bench_fingerprints.rs"
harness = false
required-features = ["bench_fingerprints"]
